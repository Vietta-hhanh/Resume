ft_toupper.c - из маленькой буквы большая
ft_tolower.c - из большой буквы маленькая
ft_isprint.c - если печатный символ "1", если нет "0"
ft_isascii.c - если символ в ascii - 1, если нет - 0
ft_isalnum.c - 1 если буква латиницы или цифра. 0 если всё остальное
ft_isdigit.c - 1 если цифра, 0 если другое
ft_isalpha.c - 1 если буква, 0 если другое
ft_atoi.c - делает char строчку с цифрами в int (возвращает int)
ft_strncmp.c - сравнивает n символов в 2 строках если (2 > 1 -> 1 ; 1 > 2 -> -1; 1 = 2 -> 0)|| если кол-во символов = 0, возв. 0

ft_strnstr.c - ищет первое вхождение искаемого СЛОВА в поисковой строке, возвращает указатель на первый символ этого слова в поисковой строке (3 - аргумент, число символов, которое как минимум равно (или больше) количеству(а) символов от начала строки до последнего символа искаемого слова) || если поисковое слово 0, то возвращает строку, в который должен быть поиск|| если не нашел вхождения - возвращает 0

ft_strrchr.c - ищет первое вхождение СИМВОЛА в строку с конца, если не нашел (возвр. 0)
ft_strchr.c - ищет первое вхождение СИМВОЛА в строку с начала|возвращает указатель на элемент, если найден, 0 - если не найдено.

ft_memset.c - заменяет в строчке определенным символом n количество байт|| возвращает строку

ft_bzero.c - заменяет побайтно в строчке элементы на нулевой байт || ничего не возвращает
ft_memcpy.c - копирует из одной строчки в другую n байт, наложение не учитывается,
ft_memccpy.c - копирует из одной строчки в другую n байт или пока не встретит заданный символ, в копируемой строке //возвращает dst или NULL

ft_memmove.c - функция в зависимости от нахождения src и dst копирует либо сначала, либо с конца, чтобы не происходило наложение|возвращает полученную строку| если dst или src 0 возвращается 0

ft_memchr.c - функция возвращает указатель на найденный в строке элемент|| если не находит возвращает NULL

ft_memcmp.c - функция принимает две строки и сравнивает их до n байта, если 1 str > 2 возвращ. число > 0, если < возвращ. число < 0 , если равно возвращ. число = 0

ft_strlen.c - считает количество символов (без \0)
ft_strlcpy копирует src в dst (dstsize - 1) элемент (для \0), если успешно возвращает длину src если dstsize = 0 возвращает длину src(копирование не происходит), если dst = 0 или stc = 0 возвращает 0

ft_strlcat.c (говно, обходить стороной) копирует src в конец строки dst (затирая '\0'), возвращает длину строки полученной,(при условия dstsize - 1 - длина dst > 0), после копирования ставит '\0' (НО)|||| если dstsize = 0 возвращает длину src; если src = 0, возвращает длину dst; если dstsize < длины dst возвращает dstsize + длина src;

ft_strdup.c - Функция дублирует строку, на которую указывает аргумент str mallocom и возвращает её

ft_calloc.c - mallocom выделяет память (кол-во эл * размер одного) и заполняет нулями//если подан любой нулевой параметр, выделяется 1 байт памяти и вставляет ноль|| возвращает строку. 

additional
ft_substr.c - с определенного индекса в строчке, выделяет память и сохраняет  Строчку определенной длины|| если основная строка = 0, возврат 0

ft_strjoin.c - две строчки объединяет в одну с malloc и возвращает обратно \0 в конце|| если s1 или s2 равны 0, возврат 0

ft_strtrim.c - берет строку и удаляет из нее все символы из set'a, пока не встретит любой символ, которого не будет в set'e. удаляет как с начала, так и с конца, возвращает новую строку

ft_split.c - делит строку на части, разделителем является элемент char, возвращает указатель на указатели, выделенные malloc'ом

ft_itoa.c - превращает int число в строку.
ft_strmapi.c - создает новую строку из результатов применения функции f к оригинальной строке. возвращает новую строку|| если ориг. строка 0, верн. 0

ft_putchar_fd.c - командой write записывает в данный файловый дескриптор символ.
ft_putstr_fd.c - пишет write'ом строку
ft_putendl_fd.c - пишет write'ом строку и в конце новая строка.
ft_putnbr_fd.c - пишет write'ом число

lists

ft_lstnew.c - выделяет память и создает лист под указателем на лист, применяет к значению content значение, вложенное в функцию, next = NULL || возвращает указатель на лист

ft_lstadd_front.c - добавляет лист, переданный во 2 аргументе в начало списка, устанавливает на него указатель|| если 2 аргумент 0 - ничего не происходит, если начало нет, то 2 аргумент становится началом

ft_lstsize.c - считает количество листов, включая случай, когда нет листов вообще
ft_lstlast.c - возвращает последний элемент списка, если нет листа, возвращает 0
ft_lstadd_back.c - добавляет лист в конце списка || если начала списка нет, то новый лист теперь начало списка ||если нет нового листа, возврат

ft_lstdelone.c - применяет функцию очищения к одному листу, ставит указатель на NULL, если списка нет или функции нет, то возврат

ft_lstclear.c -  применяет функцию очищения к каждому листу списка, в конце ставит указатель на NULL, если нет функции или начала листа - возврат

ft_lstiter.c - проходит по всему списку и применяет функцию к content'y каждого элемента
если нет функции или списка возврат

ft_lstmap.c - проходит по всему списку и создает новый список в результате применения функции на content, возвращает новый список, если нет функции, или листа возврат



cmmd + ˜